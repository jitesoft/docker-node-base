image: docker:latest
variables:
  IMG_NAME: "jitesoft/node-base"
services:
  - docker:dind

stages:
  - build
  - slim
  - full
  - notify

build:shared:
  stage: build
  before_script:
    - echo ${CI_JOB_TOKEN} | docker login -u gitlab-ci-token registry.gitlab.com --password-stdin
  script:
    - docker build -t ${CI_REGISTRY_IMAGE}:shared -f shared/Dockerfile --no-cache --network host .
    - docker push ${CI_REGISTRY_IMAGE}:shared

.build:slim: &slim_build
  stage: slim
  before_script:
    - apk add --no-cache grep
    - echo ${CI_JOB_TOKEN} | docker login -u gitlab-ci-token registry.gitlab.com --password-stdin
    - docker pull ${CI_REGISTRY_IMAGE}:shared
    - echo ${DOCKER_HUB_PASSWORD} | docker login -u ${DOCKER_HUB_USER} --password-stdin
  script:
    - NODE=$(docker run --rm ${CI_REGISTRY_IMAGE}:shared cat /tmp/${BUILD_TYPE}.txt)
    - NODE_SHORT=$(echo ${NODE} | cut -d'.' -f1)
    - echo "Building slim image for node v ${NODE} - short name ${NODE_SHORT}"
    - BUILD=$(docker build --build-arg VERSION=${NODE} -q -f slim/Dockerfile --network host --no-cache .)
    - echo "The image build hash is ${BUILD}"
    - TAGS="${NODE}-slim ${NODE_SHORT}-slim ${BUILD_TYPE}-slim ${EXTRA_TAGS}"
    - for tag in ${TAGS}; do docker tag ${BUILD} ${IMG_NAME}:${tag}; docker push ${IMG_NAME}:${tag}; done

build:slim:latest:
  variables:
    BUILD_TYPE: "latest"
    EXTRA_TAGS: ''
  <<: *slim_build

build:slim:stable:
  variables:
    BUILD_TYPE: "stable"
    EXTRA_TAGS: "lts-slim dubnium-slim"
  <<: *slim_build

.build:full: &full_build
  stage: full
  before_script:
    - echo ${DOCKER_HUB_PASSWORD} | docker login -u ${DOCKER_HUB_USER} --password-stdin
    - docker pull jitesoft/node-base:${BUILD_TYPE}-slim
    - apk add --no-cache grep
  script:
    - NODE=$(docker run --rm jitesoft/node-base:${BUILD_TYPE}-slim env | grep NODE_VERSION | cut -d'=' -f2)
    - NODE_SHORT=$(echo ${NODE} | cut -d'.' -f1)
    - echo "Building full image for node v ${NODE} - short name ${NODE_SHORT}"
    - BUILD=$(docker build --build-arg BUILD_TYPE=${BUILD_TYPE} -q -f full/Dockerfile --network host --no-cache .)
    - echo "The image build hash is ${BUILD}"
    - TAGS="${NODE} ${NODE_SHORT} ${BUILD_TYPE} ${EXTRA_TAGS}"
    - for tag in $TAGS; do docker tag $BUILD ${IMG_NAME}:${tag}; docker push ${IMG_NAME}:${tag}; done

build:latest:
  variables:
    BUILD_TYPE: "latest"
  <<: *full_build

build:stable:
  variables:
    BUILD_TYPE: "stable"
    EXTRA_TAGS: "lts dubnium"
  <<: *full_build

trigger_build:
  image: alpine:latest
  stage: notify
  before_script:
    - apk add --no-cache curl
  script:
    - "curl -X POST -F token=${NOTIFY_TOKEN} -F ref=master https://gitlab.com/api/v4/projects/4048627/trigger/pipeline"
